{"ast":null,"code":"var _jsxFileName = \"/home/towha/Desktop/WillToWheel(Integrated)/v2/WillToWheel/frontend/src/csrftoken.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getCookie(name) {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\nconst csrftoken = getCookie('csrftoken');\nconst CSRFToken = () => {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"hidden\",\n    name: \"csrfmiddlewaretoken\",\n    value: csrftoken\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = CSRFToken;\nexport default CSRFToken;\nvar _c;\n$RefreshReg$(_c, \"CSRFToken\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","csrftoken","CSRFToken","type","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/towha/Desktop/WillToWheel(Integrated)/v2/WillToWheel/frontend/src/csrftoken.js"],"sourcesContent":["import React from 'react';\n\nfunction getCookie(name) {\n    let cookieValue = null;\n        if (document.cookie && document.cookie !== '') {\n            const cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                const cookie = cookies[i].trim();\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n    return cookieValue;\n}\nconst csrftoken = getCookie('csrftoken');\n\nconst CSRFToken = () => {\n    return (\n        <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\n    );\n};\nexport default CSRFToken;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAACC,IAAI,EAAE;EACrB,IAAIC,WAAW,GAAG,IAAI;EAClB,IAAIC,QAAQ,CAACC,MAAM,IAAID,QAAQ,CAACC,MAAM,KAAK,EAAE,EAAE;IAC3C,MAAMC,OAAO,GAAGF,QAAQ,CAACC,MAAM,CAACE,KAAK,CAAC,GAAG,CAAC;IAC1C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,OAAO,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MACrC,MAAMH,MAAM,GAAGC,OAAO,CAACE,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MAChC;MACA,IAAIL,MAAM,CAACM,SAAS,CAAC,CAAC,EAAET,IAAI,CAACO,MAAM,GAAG,CAAC,CAAC,KAAMP,IAAI,GAAG,GAAI,EAAE;QACvDC,WAAW,GAAGS,kBAAkB,CAACP,MAAM,CAACM,SAAS,CAACT,IAAI,CAACO,MAAM,GAAG,CAAC,CAAC,CAAC;QACnE;MACJ;IACJ;EACJ;EACJ,OAAON,WAAW;AACtB;AACA,MAAMU,SAAS,GAAGZ,SAAS,CAAC,WAAW,CAAC;AAExC,MAAMa,SAAS,GAAGA,CAAA,KAAM;EACpB,oBACId,OAAA;IAAOe,IAAI,EAAC,QAAQ;IAACb,IAAI,EAAC,qBAAqB;IAACc,KAAK,EAAEH;EAAU;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE5E,CAAC;AAACC,EAAA,GAJIP,SAAS;AAKf,eAAeA,SAAS;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}